[Default]
Version = 10

Number of Inputs = 0

;;Sanitize Checks are better than Strip Characters, but only accept ASCII Characters
;;Requires abit more work to setup correctly.
Sanitize Input Value Check = false
Sanitize Output Value Check = false 

;;Allows you to disable Prepared Statement Caching.
;;Mainly for people that don't want to waste memory on caching a Statement that is only once. 
Prepared Statement Cache = true

;;Returns InsertID, Instead of returning [1,[]] It returns [1,[<INSERTID>,[]]]
Return InsertID = false

;;Strip Characters
Strip = true
;;Possible Actions Are "Strip" / "Strip+Log" / "Strip+Error" / "None"
Strip Chars Action = STRIP
Strip Chars = /\|;{}<>'`
;;Strip Chars Used for $CUSTOM_x$ Inputs
Strip Custom Chars = /\|;{}<>'`


; --------------------------------------------------------------------------------
; Update
; --------------------------------------------------------------------------------

[updatePlayerInfo]
SQL1_1 = UPDATE users SET items=?, cash=?, bank=?, position=?,messages=?, statuses=?, housecontent=?, shopcontent=?, phoneBackground=?, houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[updatePlayerInfoNoGear]
SQL1_1 = UPDATE users SET cash=?, bank=?, position=?,messages=?, statuses=?, housecontent=?, shopcontent=?, phoneBackground=?,houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
Number of Inputs = 10

[updatePlayerInfoNoGearNoMoneyNoShop]
SQL1_1 = UPDATE users SET position=?,messages=?, statuses=?, phoneBackground=?, houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6
Number of Inputs = 6

[updatePlayerInv]
SQL1_1 = UPDATE users SET items=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerMoney]
SQL1_1 = UPDATE users SET cash=?, bank=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updatePlayerMoneyWallet]
SQL1_1 = UPDATE users SET cash=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerMoneyATM]
SQL1_1 = UPDATE users SET bank=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerPrisonTimeReason]
SQL1_1 = UPDATE users SET prisontime=?, prisonreason=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updatePlayerShop]
SQL1_1 = UPDATE users SET housecontent=?, shopcontent=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updateHouse]
SQL1_1 = UPDATE users SET housecontent=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateShop]
SQL1_1 = UPDATE users SET shopcontent=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateConnected]
SQL1_1 = UPDATE users SET connected=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateMafiaATM]
SQL1_1 = UPDATE mafiaATM SET atm=?
SQL1_INPUTS = 1
Number of Inputs = 1

[updateConnectedStartup]
SQL1_1 = UPDATE users SET connected=? WHERE connected=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateLicense]
SQL1_1 = UPDATE garage SET license=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateVehicleFuel]
SQL1_1 = UPDATE garage SET fuel=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateCarStatus]
SQL1_1 = UPDATE garage SET statuses=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateVehClass]
SQL1_1 = UPDATE garage SET class=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateVehOwner]
SQL1_1 = UPDATE garage SET owner=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateVehOwnerPay]
SQL1_1 = UPDATE users SET bank=bank + ? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateMayor]
SQL1_1 = UPDATE mayor SET mayor=1 WHERE uid=?
SQL1_INPUTS = 1
Number of Inputs = 1

[updateCrime]
SQL1_1 = UPDATE wanted SET suspectID, officerUID, charges, status, evidence WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5
Number of Inputs = 5

[update]
SQL1_1 = UPDATE users SET ?=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updateUsersValueString]
SQL1_1 = UPDATE users
SQL1_2 =    SET $CUSTOM_1$ = ?
SQL1_3 = WHERE uid = ?;
SQL1_INPUTS = 2, 1
Number of Inputs = 2
Number of Custom Inputs = 1

[resetMayor]
SQL1_1 = UPDATE mayor SET mayor=? WHERE mayor=1
SQL1_INPUTS = 1
Number of Inputs = 1

[promoteCop]
SQL1_1 = UPDATE users SET cop=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[promoteEms]
SQL1_1 = UPDATE users SET ems=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[promoteFire]
SQL1_1 = UPDATE users SET fire=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[promoteMafia]
SQL1_1 = UPDATE users SET mafia=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[promoteLegal]
SQL1_1 = UPDATE users SET legal=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[vehicleChangeColor]
SQL1_1 = UPDATE garage SET color=?, finish=?, rims=?, windows=?, lights=? WHERE license=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6
Number of Inputs = 6

; --------------------------------------------------------------------------------
; SELECT
; --------------------------------------------------------------------------------

[playerInfo]
SQL1_1 = SELECT items, cash, bank, cop, ems, position, bankaccount, phoneBackground, messages, statuses, houselevel, housecontent, shopcontent, shopname, mafia, fire, legal, prisontime, prisonreason, doughnuts FROM users WHERE uid=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1,2,3,4,5,6,7,8,9,10,11,12,13,14-String,15,16,17,18,19-String,20

[getLicense]
SQL1_1 = SELECT license, class, color, owner FROM garage WHERE license=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String,3-String,4-String

[getGarage]
SQL1_1 = SELECT license, class, color, finish, rims, windows, lights,statuses, owner FROM garage WHERE owner=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String,3-String,4-String,5-String, 6, 7, 8, 9-String

[getMafiaATM]
SQL1_1 = SELECT atm FROM mafiaatm WHERE id=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1

[getVehicleFuel]
SQL1_1 = SELECT fuel FROM garage WHERE license=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1

[getMail]
SQL1_1 = SELECT message, title, sender FROM mail WHERE receiver=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3-String,4-String

[getMessages]
SQL1_1 = SELECT message, title, sender FROM messages WHERE receiver=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3-String,4-String

[getCrime]
SQL1_1 = SELECT caseID, suspectName, suspectUID, officerName, officerUID, charges, status, evidence FROM wanted WHERE suspectUID=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8-String

[getCrimeType]
SQL1_1 = SELECT caseID, suspectName, suspectUID, officerName, officerUID, charges, status, evidence FROM wanted WHERE active=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8-String

[getMayor]
SQL1_1 = SELECT uid FROM users WHERE mayor=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String

[existPlayerInfo]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT * FROM users WHERE uid = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
Number of Inputs = 1

[existLicense]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT * FROM garage WHERE license = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
Number of Inputs = 1

; --------------------------------------------------------------------------------
; INSERT
; --------------------------------------------------------------------------------

[insertPlayerInfo]
SQL1_1 = INSERT INTO users (uid, name, items, cash, bank, cop, ems, position, phoneBackground, messages, statuses, houselevel, housecontent, shopcontent, shopname, mafia, fire, legal, prisontime, prisonreason) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
Number of Inputs = 20

[insertGarage]
SQL1_1 = INSERT INTO garage (license, class, color, finish, rims, windows, lights, owner,statuses) VALUE (?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9
Number of Inputs = 9

[insertMail]
SQL1_1 = INSERT INTO mail (message, title, sender, receiver) VALUES (?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

[insertMessage]
SQL1_1 = INSERT INTO messages (message, title, sender, receiver) VALUES (?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

[insertCrime]
SQL1_1 = INSERT INTO wanted (suspectName, suspectUID, officerName, officerUID, charges, status, evidence, active) VALUES (?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8
Number of Inputs = 8

[logEvent]
SQL1_1 = INSERT INTO logs (uid, name, type, text, cash, bank, pos) VALUES (?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7
Number of Inputs = 7

[actionLog]
SQL1_1 = INSERT INTO actionlog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[vehicleLog]
SQL1_1 = INSERT INTO vehiclelog (playerUID, playerName, playerCash, playerBank, type, text, vehicleClassname, vehicleName, amount) VALUES (?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9
Number of Inputs = 9

[moneyLog]
SQL1_1 = INSERT INTO moneylog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[copLog]
SQL1_1 = INSERT INTO coplog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[deathLog]
SQL1_1 = INSERT INTO deathlog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, weapon, distance) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
Number of Inputs = 12

[economyLog]
SQL1_1 = INSERT INTO economylog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, price, item, quantity) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
Number of Inputs = 13

[adminLog]
SQL1_1 = INSERT INTO adminlog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[craftLog]
SQL1_1 = INSERT INTO craftlog (playerUID, playerName, playerCash, playerBank, type, text, classname, name) VALUES (?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8
Number of Inputs = 8

; --------------------------------------------------------------------------------
; DELETE
; --------------------------------------------------------------------------------

[deleteCrime]
SQL1_1 = DELETE FROM wanted WHERE suspectUID=?
SQL1_INPUTS = 1
Number of Inputs = 1

[deleteGarage]
SQL1_1 = DELETE FROM garage WHERE license=?
SQL1_INPUTS = 1
Number of Inputs = 1

;;$CUSTOM_x$ allows you to insert dynamic text into an prepared statement.
;;Downside is the statement isn't cached + possible less secure. 

;;Note the order of passing inputs to extDB2 is important with custom inputs.
;; Its <inputs>:<custom_inputs>
;; So the inputs would be in this order _playerUID:_mapID:_value:_custom_1 

;;Also you can re-arrange the Input Value Order