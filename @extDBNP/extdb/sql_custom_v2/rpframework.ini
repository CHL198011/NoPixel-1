[Default]
Version = 10

Number of Inputs = 0

;;Sanitize Checks are better than Strip Characters, but only accept ASCII Characters
;;Requires abit more work to setup correctly.
Sanitize Input Value Check = false
Sanitize Output Value Check = false 

;;Allows you to disable Prepared Statement Caching.
;;Mainly for people that don't want to waste memory on caching a Statement that is only once. 
Prepared Statement Cache = true

;;Returns InsertID, Instead of returning [1,[]] It returns [1,[<INSERTID>,[]]]
Return InsertID = false

;;Strip Characters
Strip = true
;;Possible Actions Are "Strip" / "Strip+Log" / "Strip+Error" / "None"
Strip Chars Action = STRIP
Strip Chars = /\|;{}<>'`
;;Strip Chars Used for $CUSTOM_x$ Inputs
Strip Custom Chars = /\|;{}<>'`


; --------------------------------------------------------------------------------
; Update
; --------------------------------------------------------------------------------

[updatePlayerInfo]
SQL1_1 = UPDATE users SET items=?, cash=?, bank=?, position=?,messages=?, statuses=?, housecontent=?, shopcontent=?, phoneBackground=?, houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[updatePlayerInfoNoShopNoHouse]
SQL1_1 = UPDATE users SET items=?, cash=?, bank=?, position=?, messages=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6
Number of Inputs = 6

[updatePlayerInfoNoShopNoHouseNoMoney]
SQL1_1 = UPDATE users SET items=?, position=?, messages=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

[updatePlayerInfoNoGear]
SQL1_1 = UPDATE users SET cash=?, bank=?, position=?,messages=?, statuses=?, housecontent=?, shopcontent=?, phoneBackground=?,houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
Number of Inputs = 10

[updatePlayerInfoNoGearNoMoneyNoShop]
SQL1_1 = UPDATE users SET position=?,messages=?, statuses=?, phoneBackground=?, houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6
Number of Inputs = 6

[updatePlayerInfoNoGearNoShopNoHouse]
SQL1_1 = UPDATE users SET cash=?, bank=?, position=?, messages=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5
Number of Inputs = 5

[updatePlayerInfoNoGearNoShopNoHouseNoMoney]
SQL1_1 = UPDATE users SET position=?, messages=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updatePlayerInv]
SQL1_1 = UPDATE users SET items=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerPhoneBackground]
SQL1_1 = UPDATE users SET phoneBackground=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerMoney]
SQL1_1 = UPDATE users SET cash=?, bank=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updatePlayerMoneyWallet]
SQL1_1 = UPDATE users SET cash=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerMoneyATM]
SQL1_1 = UPDATE users SET bank=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateHouseLevel]
SQL1_1 = UPDATE users SET houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerStatuses]
SQL1_1 = UPDATE users SET statuses=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerRespawn]
SQL1_1 = UPDATE users SET respawn=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerPosition]
SQL1_1 = UPDATE users SET position=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updatePlayerPrisonTimeReason]
SQL1_1 = UPDATE users SET prisontime=?, prisonreason=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updatePlayerHouseShop]
SQL1_1 = UPDATE users SET housecontent=?, shopcontent=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updateHouse]
SQL1_1 = UPDATE users SET housecontent=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateShop]
SQL1_1 = UPDATE users SET shopcontent=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateConnected]
SQL1_1 = UPDATE users SET connected=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateMafiaATM]
SQL1_1 = UPDATE mafiaATM SET atm=?
SQL1_INPUTS = 1
Number of Inputs = 1

[updateConnectedStartup]
SQL1_1 = UPDATE users SET connected=?
SQL1_INPUTS = 1
Number of Inputs = 1

[updateResetRespawn]
SQL1_1 = UPDATE users SET respawn=?
SQL1_INPUTS = 1
Number of Inputs = 1

[updateLicense]
SQL1_1 = UPDATE garage SET license=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateVehicleFuelDamage]
SQL1_1 = UPDATE garage SET fuel=?, damage=? WHERE license=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updateVehClass]
SQL1_1 = UPDATE garage SET class=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateVehOwner]
SQL1_1 = UPDATE garage SET owner=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateVehOwnerPay]
SQL1_1 = UPDATE users SET bank=bank + ? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateMayor]
SQL1_1 = UPDATE mayor SET mayor=1 WHERE uid=?
SQL1_INPUTS = 1
Number of Inputs = 1

[updateCrime]
SQL1_1 = UPDATE wanted SET status=?, active=? WHERE caseID=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[update]
SQL1_1 = UPDATE users SET ?=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updateUsersValueString]
SQL1_1 = UPDATE users
SQL1_2 =    SET $CUSTOM_1$ = ?
SQL1_3 = WHERE uid = ?;
SQL1_INPUTS = 2, 1
Number of Inputs = 2
Number of Custom Inputs = 1

[resetMayor]
SQL1_1 = UPDATE mayor SET mayor=? WHERE mayor=1
SQL1_INPUTS = 1
Number of Inputs = 1

[promoteCop]
SQL1_1 = UPDATE users SET cop=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[promoteEms]
SQL1_1 = UPDATE users SET ems=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[promoteFire]
SQL1_1 = UPDATE users SET fire=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[promoteMafia]
SQL1_1 = UPDATE users SET mafia=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[promoteLegal]
SQL1_1 = UPDATE users SET legal=? WHERE uid=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[vehicleChangeColor]
SQL1_1 = UPDATE garage SET color=?, finish=?, rims=?, windows=?, lights=? WHERE license=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6
Number of Inputs = 6

; --------------------------------------------------------------------------------
; SELECT
; --------------------------------------------------------------------------------

[playerInfo]
SQL1_1 = SELECT items, cash, bank, cop, ems, position, bankaccount, phoneBackground, messages, statuses, houselevel, housecontent, shopcontent, shopname, mafia, fire, legal, prisontime, prisonreason, doughnuts, respawn FROM users WHERE uid=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1,2,3,4,5,6,7,8,9,10,11,12,13,14-String,15,16,17,18,19-String,20,21

[getLicense]
SQL1_1 = SELECT license, class, color, owner FROM garage WHERE license=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String,3-String,4-String

[getGarage]
SQL1_1 = SELECT license, class, color, finish, rims, windows, lights, statuses, owner, fuel, damage FROM garage WHERE owner=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String,3-String,4-String,5-String, 6, 7, 8, 9-String

[getMafiaATM]
SQL1_1 = SELECT atm FROM mafiaatm WHERE id=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1

[getMail]
SQL1_1 = SELECT message, title, sender FROM mail WHERE receiver=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3-String,4-String

[getMessages]
SQL1_1 = SELECT message, title, sender FROM messages WHERE receiver=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3-String,4-String

[getCrime]
SQL1_1 = SELECT caseID, suspectName, suspectUID, officerName, officerUID, charges, status, evidence FROM wanted WHERE suspectUID=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8-String

[getCrimeType]
SQL1_1 = SELECT caseID, suspectName, suspectUID, officerName, officerUID, charges, status, evidence FROM wanted WHERE active=? ORDER BY caseID DESC
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8-String

[getMayor]
SQL1_1 = SELECT uid FROM users WHERE mayor=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String

[existPlayerInfo]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT * FROM users WHERE uid = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
Number of Inputs = 1

[existLicense]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT * FROM garage WHERE license = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
Number of Inputs = 1

; --------------------------------------------------------------------------------
; INSERT
; --------------------------------------------------------------------------------

[insertPlayerInfo]
SQL1_1 = INSERT INTO users (uid, name, items, cash, bank, cop, ems, position, phoneBackground, messages, statuses, houselevel, housecontent, shopcontent, shopname, mafia, fire, legal, prisontime, prisonreason) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
Number of Inputs = 20

[insertGarage]
SQL1_1 = INSERT INTO garage (license, class, color, finish, rims, windows, lights, owner,statuses) VALUE (?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9
Number of Inputs = 9

[insertMail]
SQL1_1 = INSERT INTO mail (message, title, sender, receiver) VALUES (?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

[insertMessage]
SQL1_1 = INSERT INTO messages (message, title, sender, receiver) VALUES (?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

[insertCrime]
SQL1_1 = INSERT INTO wanted (suspectName, suspectUID, officerName, officerUID, charges, status, evidence, active) VALUES (?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8
Number of Inputs = 8

[logEvent]
SQL1_1 = INSERT INTO logs (uid, name, type, text, cash, bank, pos) VALUES (?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7
Number of Inputs = 7

[actionLog]
SQL1_1 = INSERT INTO actionlog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[vehicleLog]
SQL1_1 = INSERT INTO vehiclelog (playerUID, playerName, playerCash, playerBank, type, text, vehicleClassname, vehicleName, amount) VALUES (?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9
Number of Inputs = 9

[moneyLog]
SQL1_1 = INSERT INTO moneylog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[copLog]
SQL1_1 = INSERT INTO coplog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[deathLog]
SQL1_1 = INSERT INTO deathlog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, weapon, distance) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
Number of Inputs = 12

[economyLog]
SQL1_1 = INSERT INTO economylog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, price, item, quantity) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
Number of Inputs = 13

[adminLog]
SQL1_1 = INSERT INTO adminlog (playerUID, playerName, playerCash, playerBank, type, text, unitUID, unitName, unitCash, unitBank, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
Number of Inputs = 11

[craftLog]
SQL1_1 = INSERT INTO craftlog (playerUID, playerName, playerCash, playerBank, type, text, classname, name) VALUES (?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8
Number of Inputs = 8

; --------------------------------------------------------------------------------
; DELETE
; --------------------------------------------------------------------------------

[deleteCrime]
SQL1_1 = DELETE FROM wanted WHERE suspectUID=?
SQL1_INPUTS = 1
Number of Inputs = 1

[deleteGarage]
SQL1_1 = DELETE FROM garage WHERE license=?
SQL1_INPUTS = 1
Number of Inputs = 1

[deleteGarageDamage]
SQL1_1 = DELETE FROM garage WHERE damage=?
SQL1_INPUTS = 1
Number of Inputs = 1

;;$CUSTOM_x$ allows you to insert dynamic text into an prepared statement.
;;Downside is the statement isn't cached + possible less secure. 

;;Note the order of passing inputs to extDB2 is important with custom inputs.
;; Its <inputs>:<custom_inputs>
;; So the inputs would be in this order _playerUID:_mapID:_value:_custom_1 


;; --------------------------------------------------------------------------------
;; COMPANIES
;; --------------------------------------------------------------------------------
[insertCompany]
SQL1_1 = INSERT INTO companies (short_name, name, uid_owner) VALUES (?,?,?)
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[insertCompanyApplicant]
SQL1_1 = INSERT INTO company_applicants (id_company, uid_player) VALUES (?,?)
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[insertCompanyMember]
SQL1_1 = INSERT INTO company_members (id_company, uid_player, level) VALUES (?,?,?)
SQL1_INPUTS = 1, 2, 3,
Number of Inputs = 3

[insertCompanyVehicle]
SQL1_1 = INSERT INTO company_garage (id_company, license, class, color, finish, rims, windows, lights, statuses) VALUE (?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9
Number of Inputs = 9

[updateCompany]
SQL1_1 = UPDATE companies SET short_name=?, name=?, bank=?, members_current=?, members_max=?, level=? WHERE id=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7
Number of Inputs = 7

[updateCompany_bank]
SQL1_1 = UPDATE companies SET bank=? WHERE id=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateCompany_level]
SQL1_1 = UPDATE companies SET level=? WHERE id=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateCompany_members] 
SQL1_1 = UPDATE companies SET members_current=?, members_max=? WHERE id=?
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

[updateCompanyMember]
SQL1_1 = UPDATE company_members SET level=? WHERE uid_player=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateCompanyVehicle_visual]
SQL1_1 = UPDATE company_garage SET color=?, finish=?, rims=?, windows=?, lights=?, skin=? WHERE license=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7
Number of Inputs = 7

[updateCompanyVehicle_statuses]
SQL1_1 = UPDATE company_garage SET fuel=?, damage=?, statuses=? WHERE license=?
SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

[updateCompanyVehicle_active]
SQL1_1 = UPDATE company_garage SET active=1 WHERE license=?
SQL1_INPUTS = 1
Number of Inputs = 1

[updateCompanyVehicle_deactive]
SQL1_1 = UPDATE company_garage SET active=0 WHERE license=?
SQL1_INPUTS = 1
Number of Inputs = 1

[updateCompanyVehicle_license]
SQL1_1 = UPDATE company_garage SET license=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateCompanyVehicle_level]
SQL1_1 = UPDATE company_garage SET level=? WHERE license=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[deleteCompany]
SQL1_1 = DELETE FROM companies WHERE uid_owner=?
SQL1_INPUTS = 1
Number of Inputs = 1

[deleteCompanyMember]
SQL1_1 = DELETE FROM company_members WHERE uid_player=?
SQL1_INPUTS = 1
Number of Inputs = 1

[deleteCompanyVehicle]
SQL1_1 = DELETE FROM company_garage WHERE license=?
SQL1_INPUTS = 1
Number of Inputs = 1

[deleteCompanyApplicant]
SQL1_1 = DELETE FROM company_applicants WHERE uid_player=? AND id_company=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[getCompany_id]
SQL1_1 = SELECT id, short_name, name, bank, uid_owner, members_current, members_max, level FROM companies WHERE id=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4, 5-String, 6, 7, 8

[getCompany_player]
SQL1_1 = SELECT companies.id, companies.short_name, companies.name, companies.bank, companies.uid_owner, companies.members_current, companies.members_max, companies.level, company_members.level FROM company_members INNER JOIN companies ON company_members.id_company=companies.id WHERE company_members.uid_player=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4, 5-String, 6, 7, 8, 9

[getCompanyApplicant_all]
SQL1_1 SELECT company_applicants.id, company_applicants.id_company, company_applicants.uid_player, users.name FROM company_applicants INNER JOIN users ON company_applicants.uid_player=users.uid WHERE company_applicants.id_company=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2, 3-String, 4-String

[getCompanyVehicle_id]
SQL1_1 = SELECT license, class, color, finish, rims, windows, lights, skin, statuses, fuel, damage FROM company_garage WHERE license=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String,3-String,4-String,5-String, 6, 7, 8-String, 9-String, 10-String, 11-String

[getCompanyVehicle_available]
SQL1_1 = SELECT license, class, color, finish FROM company_garage WHERE id_company=? AND active=0 AND level<=?;
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3
OUTPUT = 1-String, 2-String, 3-String, 4-String

[getCompanyVehicle_all]
SQL1_1 = SELECT license, class, color, finish, rims, windows, lights, skin, statuses, fuel, damage, level FROM company_garage WHERE id_company=?;
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String,3-String,4-String,5-String, 6, 7, 8-String, 9-String, 10-String, 11-String, 12-String


;; --------------------------------------------------------------------------------
;; SLPD Computer
;; --------------------------------------------------------------------------------

[insertSLPDWanted]
SQL_1 = INSERT INTO slpd_wanted (uid_suspect, uid_officer, charges, wanted_level) VALUES (?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

[insertSLPDWantedVehicle]
SQL_1 = INSERT INTO slpd_wanted_vehicle (plate, description, uid_officer, reason, wanted_level) VALUES (?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5
Number of Inputs = 5

[insertSLPDTicket]
SQL_1 = INSERT INTO slpd_tickets (uid_officer, uid_player, amount, reason, points) VALUES (?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5
Number of Inputs = 5

[updateSLPDWanted_wanted]
SQL_1 = UPDATE slpd_wanted SET wanted_level=? WHERE id=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateSLPDWanted_close]
SQL_1 = UPDATE slpd_wanted SET wanted_level=0, active=0, uid_closed=? WHERE id=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2
 
[updateSLPDWantedVehicle_wanted]
SQL_1 = UPDATE slpd_wanted_vehicle SET wanted_level=? WHERE id=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[updateSLPDWantedVehicle_close]
SQL_1 = UPDATE slpd_wanted_vehicle SET wanted_level=0, active=0, uid_closed=? WHERE id=?
SQL1_INPUTS = 1, 2
Number of Inputs = 2

[getSLPDWanted_case]
SQL_1 = SELECT slpd_wanted.id, slpd_wanted.uid_suspect, suspect.name, slpd_wanted.uid_officer, officer.name, slpd_wanted.charges, slpd_wanted.wanted_level, slpd_wanted.active FROM slpd_wanted INNER JOIN users AS suspect ON slpd_wanted.uid_suspect=suspect.uid INNER JOIN users AS officer ON slpd_wanted.uid_officer=officer.uid WHERE slpd_wanted.id=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWanted_active]
SQL_1 = SQL_1 = SELECT slpd_wanted.id, slpd_wanted.uid_suspect, suspect.name, slpd_wanted.uid_officer, officer.name, slpd_wanted.charges, slpd_wanted.wanted_level, slpd_wanted.active FROM slpd_wanted INNER JOIN users AS suspect ON slpd_wanted.uid_suspect=suspect.uid INNER JOIN users AS officer ON slpd_wanted.uid_officer=officer.uid WHERE slpd_wanted.active=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWanted_uid]
SQL_1 = SQL_1 = SELECT slpd_wanted.id, slpd_wanted.uid_suspect, suspect.name, slpd_wanted.uid_officer, officer.name, slpd_wanted.charges, slpd_wanted.wanted_level, slpd_wanted.active FROM slpd_wanted INNER JOIN users AS suspect ON slpd_wanted.uid_suspect=suspect.uid INNER JOIN users AS officer ON slpd_wanted.uid_officer=officer.uid WHERE slpd_wanted.uid_suspect=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWantedVehicle_case]
SQL_1 = SELECT slpd_wanted_vehicle.id, slpd_wanted_vehicle.plate, slpd_wanted_vehicle.description, slpd_wanted_vehicle.uid_officer, users.name, slpd_wanted_vehicle.reason, slpd_wanted_vehicle.wanted_level, slpd_wanted_vehicle.active FROM slpd_wanted_vehicle INNER JOIN users ON slpd_wanted_vehicle.uid_officer=users.uid WHERE slpd_wanted_vehicle.id=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWantedVehicle_active]
SQL_1 = SELECT slpd_wanted_vehicle.id, slpd_wanted_vehicle.plate, slpd_wanted_vehicle.description, slpd_wanted_vehicle.uid_officer, users.name, slpd_wanted_vehicle.reason, slpd_wanted_vehicle.wanted_level, slpd_wanted_vehicle.active FROM slpd_wanted_vehicle INNER JOIN users ON slpd_wanted_vehicle.uid_officer=users.uid WHERE slpd_wanted_vehicle.active=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWantedVehicle_plate]
SQL_1 = SELECT slpd_wanted_vehicle.id, slpd_wanted_vehicle.plate, slpd_wanted_vehicle.description, slpd_wanted_vehicle.uid_officer, users.name, slpd_wanted_vehicle.reason, slpd_wanted_vehicle.wanted_level, slpd_wanted_vehicle.active FROM slpd_wanted_vehicle INNER JOIN users ON slpd_wanted_vehicle.uid_officer=users.uid WHERE slpd_wanted_vehicle.plate=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDticket_uid]
SQL1_1 = SELECT slpd_tickets.id, slpd_tickets.uid_player, suspect.name, slpd_tickets.uid_officer, officer.name, slpd_tickets.reason, slpd_tickets.amount, slpd_tickets.points FROM slpd_tickets INNER JOIN users AS suspect ON slpd_tickets.uid_player=suspect.uid INNER JOIN users AS officer ON slpd_tickets.uid_officer=officer.uid WHERE slpd_tickets.uid_player=?
SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8